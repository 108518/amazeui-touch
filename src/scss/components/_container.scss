// Amaze UI Mobile: Container
// @via: https://github.com/JedWatson/react-container
// @license: MIT https://github.com/JedWatson/react-container/blob/master/LICENSE
// =============================================================================

/**
 * Fill Container
 * 1. on its own - fill available vertical space
 * 2. as a child - flex to fill vertical space
 * 3. fill available vertical space without resorting to "height: 100%", which
	 *    yields undesirable results
 */

.#{$container-prefix} {
  // height: 100%;
}

.#{$container-prefix}-fill {
  height: 100%; // 1

  & > & { // 2
    flex: 1 1 0; // 3
    position: relative;
  }
}

/**
 * Container Layout
 * 1. create a flexible layout, either `column` or `row`
 * 2. flex-column elements collapse horizontally, so we stretch them out again
 */

.#{$container-prefix}-column,
.#{$container-prefix}-row {
  display: flex;
  max-height: 100%;
  width: 100%; // 2

  > .#{$container-prefix}-fill {
    flex: 1 1 0;
    position: relative;
  }

}

.#{$container-prefix}-column {
  flex-direction: column;
}

.#{$container-prefix}-row {
  flex-direction: row;
  height: auto;

  > .#{$container-prefix}-fill {
    height: auto;
    width: auto;
  }
}

// Handle alignment of containers' children

.#{$container-prefix}-align-end {
  align-items: flex-end;
}

.#{$container-prefix}-align-center {
  align-items: center;

  // center children as users may expect
  .#{$container-prefix}-direction-column > & {
    text-align: center;
  }
}

.#{$container-prefix}-align-start {
  align-items: flex-start;
}

// Handle justification of containers' children

.#{$container-prefix}-justified {
  justify-content: space-around;
}

.#{$container-prefix}-justify-end {
  justify-content: flex-end;
}

.#{$container-prefix}-justify-center {
  justify-content: center;
}

.#{$container-prefix}-justify-start {
  justify-content: flex-start;
}

// Scrollable containers

.#{$container-prefix}-scrollable {
  position: relative;
  max-height: 100%;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;

  // introduce iOS style springy scrolling
  &:before,
  &:after {
    content: "";
    height: 1px;
    position: absolute;
    width: 1px;
  }

  &:before {
    bottom: -1px;
  }
  &:after {
    top: -1px;
  }
}
